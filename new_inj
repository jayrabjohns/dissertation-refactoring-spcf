\f.
Case <
        Catch (\"p". \"i". Case <i, p>),
         (0x((\"x". \"p". \"i". Case <i, p>[0/"p"])))
        x(1x((\"x". \"p". \"i". Case <i, p>[1/"p"])))
        x(2x((\"x". \"p". \"i". Case <i, p>[2/"p"])))
        x(3x((\"x". \"p". \"i". Case <i, p>[3/"p"])))
        x(4x((\"x". \"p". \"i". Case <i, p>[4/"p"])))
        x(5x((\"x". \"p". \"i". Case <i, p>[5/"p"])))
        x(6x((\"x". \"p". \"i". Case <i, p>[6/"p"])))
        x(7x((\"x". \"p". \"i". Case <i, p>[7/"p"])))
        x(8x((\"x". \"p". \"i". Case <i, p>[8/"p"])))
        x(9x((\"x". \"p". \"i". Case <i, p>[9/"p"])))
    >


f := \"p". \"i". Case <i, p>

Inj := \"f". 
        Case <
            Catch f,
            (0x((\"x". f (0))))x
            (1x((\"x". f (1))))x
            (2x((\"x". f (2))))x
            (3x((\"x". f (3))))x
            (4x((\"x". f (4))))x
            (5x((\"x". f (5))))x
            (6x((\"x". f (6))))x
            (7x((\"x". f (7))))x
            (8x((\"x". f (8))))x
            (9x((\"x". f (9))))>

Inj f := \"f".
        Case <
            Catch f,
            (0x((\"x". f (0))))x
            (1x((\"x". f (1))))x
            (2x((\"x". f (2))))x
            (3x((\"x". f (3))))x
            (4x((\"x". f (4))))x
            (5x((\"x". f (5))))x
            (6x((\"x". f (6))))x
            (7x((\"x". f (7))))x
            (8x((\"x". f (8))))x
            (9x((\"x". f (9))))>
            [\"p". \"i". Case <i, p>/"f"]


Apply 
    (\"c". Case <
            Case <1, <1, <(\"a". \"b". Case <b, <1, (I), (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), 1, (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), (Case <1, a>), 1, (Case <2, a>)>>)>>>, <(Case <I, <((I) <(Case <1, c>), (Case <2, c>)>), ((Case <1, Case <2, <1, <(\"a". \"b". Case <b, <1, (I), (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), 1, (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), (Case <1, a>), 1, (Case <2, a>)>>)>>>>) <(I), (Case <2, c>)>)>>), (Case <Case <1, c>, <((I) <(Case <1, c>), (Case <2, c>)>), ((Case <1, Case <2, <1, <(\"a". \"b". Case <b, <1, (I), (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), 1, (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), (Case <1, a>), 1, (Case <2, a>)>>)>>>>) <(I), (Case <2, c>)>)>>), (Case <Case <2, c>, <((I) <(Case <1, c>), (Case <2, c>)>), ((Case <1, Case <2, <1, <(\"a". \"b". Case <b, <1, (I), (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), 1, (Case <1, a>), (Case <2, a>)>>), (\"a". \"b". Case <b, <(I), (Case <1, a>), 1, (Case <2, a>)>>)>>>>) <(I), (Case <2, c>)>)>>)>>) [<1, 2, 3>/"c"] with new environment



f = \p:(NatxNat) => Case <Case <1, p>, <⊥, ⊥>>

proj(inj(f)) = 
\b:(NatxNat) => 
  Case <
    π1(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <⊥, ⊥>>), 
        <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <⊥, ⊥>>)>>,
        <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <⊥, ⊥>>)>>>>
      ),
    <(Case <Case <0, b>,
      <((Case <0, π2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <⊥, ⊥>>), 
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <⊥, ⊥>>)>>, 
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <⊥, ⊥>>)>>>>)>
        ) <(Case <1, b>)>
        ), 
        ((Case <1, π2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <⊥, ⊥>>),
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <⊥, ⊥>>)>>,
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <⊥, ⊥>>)>>>>)>
        ) <(Case <1, b>)>
        )>>
    ),
    (Case <Case <1, b>,
      <((Case <0, π2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <⊥, ⊥>>),
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <⊥, ⊥>>)>>,
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <⊥, ⊥>>)>>>>)>
        ) <(Case <0, b>)>
        ),
        ((Case <1, π2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <⊥, ⊥>>),
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <⊥, ⊥>>)>>,
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <⊥, ⊥>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <⊥, ⊥>>)>>>>)>
        ) <(Case <0, b>)>
        )>>
    )>>




f = \p:(NatxNat) => Case <Case <1, p>, <$\bot$, $\bot$>>

proj(inj(f)) = 
\b:(NatxNat) => 
  Case <
    $\pi$1(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <$\bot$, $\bot$>>), 
        <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <$\bot$, $\bot$>>)>>,
        <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <$\bot$, $\bot$>>)>>>>
      ),
    <(Case <Case <0, b>,
      <((Case <0, $\pi$2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <$\bot$, $\bot$>>), 
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <$\bot$, $\bot$>>)>>, 
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <$\bot$, $\bot$>>)>>>>)>
        ) <(Case <1, b>)>
        ), 
        ((Case <1, $\pi$2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <$\bot$, $\bot$>>),
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <$\bot$, $\bot$>>)>>,
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <$\bot$, $\bot$>>)>>>>)>
        ) <(Case <1, b>)>
        )>>
    ),
    (Case <Case <1, b>,
      <((Case <0, $\pi$2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <$\bot$, $\bot$>>),
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <$\bot$, $\bot$>>)>>,
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <$\bot$, $\bot$>>)>>>>)>
        ) <(Case <0, b>)>
        ),
        ((Case <1, $\pi$2(Case <Catch (\p:(NatxNat) => Case <Case <1, p>, <$\bot$, $\bot$>>),
          <<0, <(\a:Nat => Case <Case <1, <0, (Case <0, a>)>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <1, (Case <0, a>)>>, <$\bot$, $\bot$>>)>>,
          <1, <(\a:Nat => Case <Case <1, <(Case <0, a>), 0>>, <$\bot$, $\bot$>>), (\a:Nat => Case <Case <1, <(Case <0, a>), 1>>, <$\bot$, $\bot$>>)>>>>)>
        ) <(Case <0, b>)>
        )>>
    )>>


inj f = 
Case <
  Catch (\p:(NatxNatxNat) => Case <Case <1, p>, <⊥, ⊥>>), 
  <<0, 
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <0, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
        <<0, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>), 
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <1, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
        <<0, 
          <(\b:Nat => Case <Case <1, <1, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
          <1, 
          <(\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>)>>,
   <1,
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 0, (Case <1, a>)>>, <⊥, ⊥>>),
        <<0, 
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 0, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 0, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
        <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 0, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 0, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>),
     (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 1, (Case <1, a>)>>, <⊥, ⊥>>), 
        <<0, 
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 1, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 1, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
        <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 1, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 1, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>)>>
>>


inj f = 
Case <
  Catch (\p:(NatxNatxNat) => Case <Case <1, p>, <⊥, ⊥>>),
  <<0, 
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <0, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <0, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>, 
         <1, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
         <2, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>), 
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <1, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <1, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
        <1, 
          <(\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
        <2, 
          <(\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>)>>,
   <1, 
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 0, (Case <1, a>)>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 0, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 0, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
        <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 0, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 0, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
        <2, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 0, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 0, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>), 
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 1, (Case <1, a>)>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 1, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 1, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
         <1,
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 1, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 1, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
         <2,
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 1, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 1, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>)
    >>, 
   <2, 
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 0>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>), 0>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>), 0>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 0>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 0>>, <⊥, ⊥>>)>>,
         <2, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 0>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 0>>, <⊥, ⊥>>)>>
      >>),
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 1>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>), 1>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>), 1>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 1>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 1>>, <⊥, ⊥>>)>>,
         <2, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 1>>, <⊥, ⊥>>), 
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 1>>, <⊥, ⊥>>)>>
      >>)>>
>>

Case <
  Catch (\p:(NatxNatxNat) => Case <Case <1, p>, <⊥, ⊥>>), 
  <<0,
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <0, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
        <<0, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
        <1, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
        <2, 
          <(\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>>>),
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <1, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>), 
        <<0,
          <(\b:Nat => Case <Case <1, <1, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>), 
           (\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
         <2,
          <(\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>)>>,
    <1,
     <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 0, (Case <1, a>)>>, <⊥, ⊥>>), 
        <<0,
         <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 0, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
          (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 0, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 0, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 0, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>,
         <2, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 0, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 0, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>), 
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 1, (Case <1, a>)>>, <⊥, ⊥>>), 
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 1, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 1, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>, 
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 1, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 1, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>, 
         <2, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 1, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 1, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>
      >>)>>,
    <2,
      <(Case <
          Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 0>>, <⊥, ⊥>>),
          <<0, 
            <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>), 0>>, <⊥, ⊥>>),
             (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>), 0>>, <⊥, ⊥>>)>>,
           <1, 
            <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 0>>, <⊥, ⊥>>),
             (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 0>>, <⊥, ⊥>>)>>, 
           <2, 
            <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 0>>, <⊥, ⊥>>),
             (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 0>>, <⊥, ⊥>>)>>
        >>),
        (Case <
          Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 1>>, <⊥, ⊥>>), 
          <<0,
            <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>), 1>>, <⊥, ⊥>>),
             (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>), 1>>, <⊥, ⊥>>)>>,
          <1, 
            <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 1>>, <⊥, ⊥>>),
             (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 1>>, <⊥, ⊥>>)>>,
          <2, 
            <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 1>>, <⊥, ⊥>>),
             (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 1>>, <⊥, ⊥>>)>>>>)>>>>

Case <
  Catch (\p:(NatxNatxNat) => Case <Case <1, p>, <⊥, ⊥>>),
  <<0,
   <(Case <
      Catch (\a:(NatxNat) => Case <Case <1, <0, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
      <<0, 
        <(\b:Nat => Case <Case <1, <0, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
         (\b:Nat => Case <Case <1, <0, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
       <1,
        <(\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>), 
         (\b:Nat => Case <Case <1, <0, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>>>), 
    (Case <
      Catch (\a:(NatxNat) => Case <Case <1, <1, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
      <<0,
        <(\b:Nat => Case <Case <1, <1, (Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
         (\b:Nat => Case <Case <1, <1, (Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
       <1, 
        <(\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
         (\b:Nat => Case <Case <1, <1, (Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>>>)>>,
  <1, 
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 0, (Case <1, a>)>>, <⊥, ⊥>>),
        <<0, 
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 0, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>), 
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 0, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
         <1,
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 0, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 0, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>>>),
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 1, (Case <1, a>)>>, <⊥, ⊥>>),
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), 1, (Case <1, <0, (Case <0, b>)>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), 1, (Case <1, <1, (Case <0, b>)>>)>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), 1, (Case <1, <(Case <0, b>), 0>>)>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), 1, (Case <1, <(Case <0, b>), 1>>)>>, <⊥, ⊥>>)>>>>)>>,
  <2, 
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 0>>, <⊥, ⊥>>), 
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>), 0>>, <⊥, ⊥>>),
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>), 0>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 0>>, <⊥, ⊥>>), 
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 0>>, <⊥, ⊥>>)>>>>),
      (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 1>>, <⊥, ⊥>>), 
        <<0,
          <(\b:Nat => Case <Case <1, <(Case <0, <0, (Case <0, b>)>>), (Case <1, <0, (Case <0, b>)>>), 1>>, <⊥, ⊥>>), 
           (\b:Nat => Case <Case <1, <(Case <0, <1, (Case <0, b>)>>), (Case <1, <1, (Case <0, b>)>>), 1>>, <⊥, ⊥>>)>>,
         <1, 
          <(\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 0>>), (Case <1, <(Case <0, b>), 0>>), 1>>, <⊥, ⊥>>), 
           (\b:Nat => Case <Case <1, <(Case <0, <(Case <0, b>), 1>>), (Case <1, <(Case <0, b>), 1>>), 1>>, <⊥, ⊥>>)>>>>)>>>>



Case <
  Catch (\p:(NatxNatxNat) => Case <Case <1, p>, <⊥, ⊥>>), 
  <<0,
    <(Case <
        Catch (\a:(NatxNat) => Case <Case <1, <0, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>),
        <<0, <⊥, ⊥>>,
         <1, <⊥, ⊥>>
        >>),
     (Case <
        Catch (\a:(NatxNat) => Case <Case <1, <1, (Case <0, a>), (Case <1, a>)>>, <⊥, ⊥>>), 
        <<0, <⊥, ⊥>>,
         <1, <⊥, ⊥>>>>)>>, 
   <1, 
    <(Case <Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 0, (Case <1, a>)>>, <⊥, ⊥>>), <<0, <⊥, ⊥>>, <1, <⊥, ⊥>>>>),
     (Case <Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), 1, (Case <1, a>)>>, <⊥, ⊥>>), <<0, <⊥, ⊥>>, <1, <⊥, ⊥>>>>)>>,
   <2,
    <(Case <Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 0>>, <⊥, ⊥>>), <<0, <⊥, ⊥>>, <1, <⊥, ⊥>>>>),
     (Case <Catch (\a:(NatxNat) => Case <Case <1, <(Case <0, a>), (Case <1, a>), 1>>, <⊥, ⊥>>), <<0, <⊥, ⊥>>, <1, <⊥, ⊥>>>>)>>>>


      (
        Natx(
          Natx(
                (I->Nat)x(I->Nat)
              )
             x(I->Nat)x(I->Nat)
            )x
        Natx(
          (I->Nat)xI->Nat)x(I->Nat)xI->Nat
      )


[
  <0, 
    <(\a:[Nat]^1 => Case <0, <(Case <Case <0, a>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <(Case <0, <0, (Case <0, <0>>)>>), 0, (Case <1, <0, (Case <0, <0>>)>>)>>, <⊥>>)>>>>)>) (I))>>)>>)>>,
  <1, 
    <(\a:[Nat]^1 => Case <0, <(Case <Case <0, a>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <(Case <0, <(Case <0, <0>>), 0>>), 0, (Case <1, <(Case <0, <0>>), 0>>)>>, <⊥>>)>>>>)>) (I))>>)>>)
  >>
]

[
  <0,
    <(\a:[Nat]^1 => Case <0, <(Case <Case <0, a>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <(Case <0, <0, (Case <0, <0>>)>>), 0, (Case <1, <0, (Case <0, <0>>)>>)>>, <⊥>>)>>>>)>) (I))>>)>>),
     (\a:[Nat]^1 => Case <0, <(Case <Case <0, a>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <(Case <0, <1, (Case <0, <0>>)>>), 0, (Case <1, <1, (Case <0, <0>>)>>)>>, <⊥>>)>>>>)>) (I))>>)>>)>>,
  <1,
   <(\a:[Nat]^1 => Case <0, <(Case <Case <0, a>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <(Case <0, <(Case <0, <0>>), 0>>), 0, (Case <1, <(Case <0, <0>>), 0>>)>>, <⊥>>)>>>>)>) (I))>>)>>), (\a:[Nat]^1 => Case <0, <(Case <Case <0, a>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <(Case <0, <(Case <0, <0>>), 1>>), 0, (Case <1, <(Case <0, <0>>), 1>>)>>, <⊥>>)>>>>)>) (I))>>)>>)>>]

(\f:([Nat]^4)->0 => 

Case <
  Catch f,
  <<0, 
     <(\x:[Nat]^3 => f <0, (Case <0, x>), (Case <1, x>), (Case <2, x>)>),
      (\x:[Nat]^3 => f <1, (Case <0, x>), (Case <1, x>), (Case <2, x>)>)>>,
   <1, 
     <(\x:[Nat]^3 => f <(Case <0, x>), 0, (Case <1, x>), (Case <2, x>)>),
      (\x:[Nat]^3 => f <(Case <0, x>), 1, (Case <1, x>), (Case <2, x>)>)>>,
   <2, 
     <(\x:[Nat]^3 => f <(Case <0, x>), (Case <1, x>), 0, (Case <2, x>)>),
      (\x:[Nat]^3 => f <(Case <0, x>), (Case <1, x>), 1, (Case <2, x>)>)>>, 
   <3, 
     <(\x:[Nat]^3 => f <(Case <0, x>), (Case <1, x>), (Case <2, x>), 0>),
      (\x:[Nat]^3 => f <(Case <0, x>), (Case <1, x>), (Case <2, x>), 1>)>>>>)
[\p:[Nat]^4 => Case <Case <1, p>, <⊥, ⊥>>/"f"]

Case <
  Catch (\p:[Nat]^4 => Case <Case <1, p>, <⊥, ⊥>>), 
  <<0, 
    <(Case <
        Catch (\a:[Nat]^3 => Case <Case <1, <0, (Case <0, a>), (Case <1, a>), (Case <2, a>)>>, <⊥, ⊥>>),
        <<0, 
          <(Case <
              Catch (\b:[Nat]^2 => Case <Case <1, <0, (Case <0, <0, (Case <0, b>), (Case <1, b>)>>), (Case <1, <0, (Case <0, b>), (Case <1, b>)>>), (Case <2, <0, (Case <0, b>), (Case <1, b>)>>)>>, <⊥, ⊥>>),
              <<0, 
                <(Case <0, 
                    <<0, 
                      <(\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <0, (Case <0, <0>>)>>), (Case <1, <0, (Case <0, <0>>)>>)>>), (Case <1, <0, (Case <0, <0, (Case <0, <0>>)>>), (Case <1, <0, (Case <0, <0>>)>>)>>), (Case <2, <0, (Case <0, <0, (Case <0, <0>>)>>), (Case <1, <0, (Case <0, <0>>)>>)>>)>>, <⊥, ⊥>>),
                      (\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <0, (Case <0, <1>>)>>), (Case <1, <0, (Case <0, <1>>)>>)>>), (Case <1, <0, (Case <0, <0, (Case <0, <1>>)>>), (Case <1, <0, (Case <0, <1>>)>>)>>), (Case <2, <0, (Case <0, <0, (Case <0, <1>>)>>), (Case <1, <0, (Case <0, <1>>)>>)>>)>>, <⊥, ⊥>>)

                  >>>>), 
                  (Case <0,
                     <<0, 
                       <(\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <1, (Case <0, <0>>)>>), (Case <1, <1, (Case <0, <0>>)>>)>>), (Case <1, <0, (Case <0, <1, (Case <0, <0>>)>>), (Case <1, <1, (Case <0, <0>>)>>)>>), (Case <2, <0, (Case <0, <1, (Case <0, <0>>)>>), (Case <1, <1, (Case <0, <0>>)>>)>>)>>, <⊥, ⊥>>),
                       (\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <1, (Case <0, <1>>)>>), (Case <1, <1, (Case <0, <1>>)>>)>>), (Case <1, <0, (Case <0, <1, (Case <0, <1>>)>>), (Case <1, <1, (Case <0, <1>>)>>)>>), (Case <2, <0, (Case <0, <1, (Case <0, <1>>)>>), (Case <1, <1, (Case <0, <1>>)>>)>>)>>, <⊥, ⊥>>)
                  >>>>)>>, 
               <1, 
                <(Case <0,
                  <<0, 
                    <(\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <(Case <0, <0>>), 0>>), (Case <1, <(Case <0, <0>>), 0>>)>>), (Case <1, <0, (Case <0, <(Case <0, <0>>), 0>>), (Case <1, <(Case <0, <0>>), 0>>)>>), (Case <2, <0, (Case <0, <(Case <0, <0>>), 0>>), (Case <1, <(Case <0, <0>>), 0>>)>>)>>, <⊥, ⊥>>),
                    (\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <(Case <0, <1>>), 0>>), (Case <1, <(Case <0, <1>>), 0>>)>>), (Case <1, <0, (Case <0, <(Case <0, <1>>), 0>>), (Case <1, <(Case <0, <1>>), 0>>)>>), (Case <2, <0, (Case <0, <(Case <0, <1>>), 0>>), (Case <1, <(Case <0, <1>>), 0>>)>>)>>, <⊥, ⊥>>)
                  >>>>), 
                  (Case <0,
                    <<0, 
                      <(\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <(Case <0, <0>>), 1>>), (Case <1, <(Case <0, <0>>), 1>>)>>), (Case <1, <0, (Case <0, <(Case <0, <0>>), 1>>), (Case <1, <(Case <0, <0>>), 1>>)>>), (Case <2, <0, (Case <0, <(Case <0, <0>>), 1>>), (Case <1, <(Case <0, <0>>), 1>>)>>)>>, <⊥, ⊥>>),
                      (\b:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <(Case <0, <1>>), 1>>), (Case <1, <(Case <0, <1>>), 1>>)>>), (Case <1, <0, (Case <0, <(Case <0, <1>>), 1>>), (Case <1, <(Case <0, <1>>), 1>>)>>), (Case <2, <0, (Case <0, <(Case <0, <1>>), 1>>), (Case <1, <(Case <0, <1>>), 1>>)>>)>>, <⊥, ⊥>>)
                  >>>>)
            >>>>), 
            (Case <
              Catch (\b:[Nat]^2 => Case <Case <1, <0, (Case <0, <1, (Case <0, b>), (Case <1, b>)>>), (Case <1, <1, (Case <0, b>), (Case <1, b>)>>), (Case <2, <1, (Case <0, b>), (Case <1, b>)>>)>>, <⊥, ⊥>>),
              



(
  Case <0,
    π2(Case <
          Catch (\a:[Nat]^2 => Case <Case <1, <0, (Case <0, a>), (Case <1, a>)>>, <⊥>>),
          <<0, 
            <(\b:[Nat]^1 => Case <0, <(Case <Case <0, b>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <0, (Case <0, <0, (Case <0, <0>>)>>), (Case <1, <0, (Case <0, <0>>)>>)>>, <⊥>>)>>>>)>) (I))>>)>>)>>,
           <1, 
            <(\b:[Nat]^1 => Case <0, <(Case <Case <0, b>, <((Case <0, π2(Case <0, <<0, <(\a:I => Case <Case <1, <0, (Case <0, <(Case <0, <0>>), 0>>), (Case <1, <(Case <0, <0>>), 0>>)>>, <⊥>>)>>>>)>) (I))>>)>>)
          >>>>)>) (I) because the lhs [Nat]^1 cannot be applied with rhs I